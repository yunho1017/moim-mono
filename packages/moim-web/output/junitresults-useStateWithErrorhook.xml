<?xml version="1.0" encoding="UTF-8" ?>
<testsuites disabled="0" errors="0" failures="0" tests="6" time="0.005">
 <testsuite name="useStateWithError hook" timestamp="2022-12-15T18:03:26" hostname="localhost" time="0.003" errors="0" tests="0" skipped="0" disabled="0" failures="0">
 </testsuite>
 <testsuite name="useStateWithError hook.when initial render hook" timestamp="2022-12-15T18:03:26" hostname="localhost" time="0.001" errors="0" tests="2" skipped="0" disabled="0" failures="0">
  <testcase classname="useStateWithError hook.when initial render hook" name="should set state to same default state" time="0" />
  <testcase classname="useStateWithError hook.when initial render hook" name="should error is undefined" time="0.001" />
 </testsuite>
 <testsuite name="useStateWithError hook.when validation result is fail" timestamp="2022-12-15T18:03:26" hostname="localhost" time="0" errors="0" tests="2" skipped="0" disabled="0" failures="0">
  <testcase classname="useStateWithError hook.when validation result is fail" name="should set error state" time="0" />
  <testcase classname="useStateWithError hook.when validation result is fail" name="should state is same to default state" time="0" />
 </testsuite>
 <testsuite name="useStateWithError hook.when invalidateNotSet flag is false" timestamp="2022-12-15T18:03:26" hostname="localhost" time="0.001" errors="0" tests="0" skipped="0" disabled="0" failures="0">
 </testsuite>
 <testsuite name="useStateWithError hook.when invalidateNotSet flag is false.when validation result is fail" timestamp="2022-12-15T18:03:26" hostname="localhost" time="0" errors="0" tests="2" skipped="0" disabled="0" failures="0">
  <testcase classname="useStateWithError hook.when invalidateNotSet flag is false.when validation result is fail" name="should set error state" time="0" />
  <testcase classname="useStateWithError hook.when invalidateNotSet flag is false.when validation result is fail" name="should state is changed to new value" time="0" />
 </testsuite>
</testsuites>